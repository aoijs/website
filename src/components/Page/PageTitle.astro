---
import type { Props } from "@astrojs/starlight/props";
import { Icon } from "@astrojs/starlight/components";
import Default from "@astrojs/starlight/components/PageTitle.astro";
import Version from "../PackageStats/PackageVersion.astro";
import AvatarGroup from "@atlaskit/avatar-group";

const { data } = Astro.props.entry;

const avatars = [];

if (data.author) {
  avatars.push({
    key: data.author,
    name: data.author,
    href: "/contributors",
    src: data.author_url,
  });
}

if (data.edited_by) {
  avatars.push({
    key: data.edited_by,
    name: data.edited_by,
    href: "/contributors",
    src: data.edited_by_url,
  });
}
---

{
  data.type === "integration" ? (
    <div class="wrapper">
      <h1 id="_top">
        <>
          <span class="scope">@akarui/</span>
          <span>{data.package?.replace("@akarui/", "") ?? "aoi.js"}</span>
        </>
      </h1>
      <div class="integration-metadata">
        <Version pkgName={data.package ?? "aoi.js"} />
        <a href={data.extensionUrl}>
          <Icon size="1rem" name="github" /> GitHub
        </a>
        <a href={"https://www.npmjs.com/package/" + data.package}>
          <svg
            width="16"
            height="16"
            viewBox="0 0 576 512"
            fill="currentColor"
            aria-hidden="true"
          >
            <path d="M288 288h-32v-64h32v64zm288-128v192H288v32H160v-32H0V160h576zm-416 32H32v128h64v-96h32v96h32V192zm160 0H192v160h64v-32h64V192zm224 0H352v128h64v-96h32v96h32v-96h32v96h32V192z" />
          </svg>
          npm
        </a>
        <a href={data.extensionUrl + "/releases"}>
          <Icon size="1rem" name="list-format" /> Changelog
        </a>
      </div>
    </div>
  ) : data.type === "guide" ? (
    <div class="wrapper">
      <h1 id="_top">{data.title}</h1>
      <div class="author-info">
        <span>Written by</span>
        <AvatarGroup
          client:load
          client:only="react"
          appearance="stack"
          data={avatars}
          borderColor="var(--sl-color-text-accent)"
        />
      </div>
    </div>
  ) : (
    <Default {...Astro.props}>
      <slot />
    </Default>
  )
}

<style>
  .wrapper {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  h1 {
    display: flex;
    flex-wrap: wrap;
    color: var(--sl-color-white);
    font-size: var(--sl-text-h1);
    font-weight: 600;
    line-height: var(--sl-line-height-headings);
  }
  .scope {
    color: var(--sl-color-text);
    font-weight: 400;
  }
  .integration-metadata {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem 1rem;
    font-size: var(--sl-text-xs);
  }
  .integration-metadata a {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    text-decoration: none;
    color: var(--sl-color-text-accent);
  }
  .integration-metadata a:hover {
    color: var(--sl-color-white);
  }
  .integration-metadata svg {
    width: 1.5rem;
  }
  .author-info {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    align-self: vertical;
    gap: 0.5rem;
  }
  .author-info div {
    display: flex;
    gap: 0.5rem;
  }
  .image {
    width: 45px;
    height: 45px;
  }
</style>
