name: Check Build

on:
  issue_comment:
    types: [created]

jobs:
  deploy-preview:
    runs-on: ubuntu-20.04
    env:
      START_TIME: ${{ github.event.issue.created_at }}
    steps:
      - name: Check Approval
        if: startsWith(github.event.comment.body, 'approve')
        run: echo "Approval received."
        id: approval

      - name: Check for "Build Pending" Label
        if: steps.approval.outcome == 'success'
        uses: actions/github-script@v4
        with:
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

            const { owner, repo } = context.repo;
            const { number } = context.issue;

            const response = await octokit.issues.listLabelsOnIssue({
              owner,
              repo,
              issue_number: number
            });

            const hasBuildPendingLabel = response.data.some(label => label.name === "Build Pending");

            if (hasBuildPendingLabel) {
              console.log("Build Pending label found.");
              core.setOutput("remove_label", true);
            } else {
              console.log("Build Pending label not found.");
              core.setOutput("remove_label", false);
            }

      - name: Remove "Build Pending" Label
        if: steps.approval.outcome == 'success' && steps.check-for-label.outputs.remove_label == 'true'
        uses: actions/github-script@v4
        with:
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

            const { owner, repo } = context.repo;
            const { number } = context.issue;

            await octokit.issues.removeLabel({
              owner,
              repo,
              issue_number: number,
              name: "Build Pending"
            });

      - name: Create or Update Comment
        if: steps.approval.outcome == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Waiting for deployment to finish..
          reactions: 'hourglass'

      - name: Checkout
        if: steps.approval.outcome == 'success'
        uses: actions/checkout@v3

      - name: Install and Build
        if: steps.approval.outcome == 'success'
        run: |
          npm install --legacy-peer-deps
          npm install react-dom --legacy-peer-deps
          npm run build
        continue-on-error: true

      - name: Check Build Status
        if: steps.approval.outcome == 'success' && ${{ always() }}
        run: |
          if [ $? -eq 0 ]; then
            echo "Build succeeded."
            echo "Updating comment..."
            echo "COMMENT_BODY=Build succeeded." >> $GITHUB_ENV
            echo "LABEL=Build Succeeded" >> $GITHUB_ENV
          else
            echo "Build failed."
            echo "Updating comment..."
            echo "COMMENT_BODY=Build failed. Please check the build logs for details. Mentioning user." >> $GITHUB_ENV
            echo "LABEL=Build Failed" >> $GITHUB_ENV
          fi

      - name: Update Comment
        if: steps.approval.outcome == 'success' && ${{ always() }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: ${{ env.COMMENT_BODY }}
          reactions: hourglass
          add-labels: ${{ env.LABEL }}
