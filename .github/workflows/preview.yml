name: Update Comment on PR Approval

on:
  issue_comment:
    types: [created, edited, deleted]

jobs:
  update-comment:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, 'approve') }}
    steps:
      - name: Create or Update Comment
        id: create-or-update-comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Waiting for deployment to finish..
          reactions: 'hourglass'

      - uses: actions/checkout@v3
      - uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: |
            'Build Pending'
            'Build Failed'
            'Build Passed'

      - name: Install and Build
        if: github.event.action != 'closed'
        run: |
          npm install --legacy-peer-deps
          npm install react-dom --legacy-peer-deps
          npm run build
        continue-on-error: true

      - name: Check Build Status
        if: always()
        id: check-build-status
        run: |
          if [ $? -eq 0 ]; then
            echo "Build succeeded."
            echo "Updating comment..."
            echo "COMMENT_BODY=Build succeeded." >> $GITHUB_ENV
            echo "LABEL=Build Succeeded" >> $GITHUB_ENV
          else
            echo "Build failed."
            echo "Updating comment..."
            echo "COMMENT_BODY=Build failed. Please check the build logs for details. Mentioning user." >> $GITHUB_ENV
            echo "LABEL=Build Failed" >> $GITHUB_ENV
          fi

      - name: Update Comment
        if: always()
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ env.COMMENT_BODY }}
          reactions: 'hourglass'
          add-labels: ${{ env.LABEL }}
